install.packages("igraph")
library("igraph")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
g <- random.graph.game(10, p=0.1, direct=F)
plot(g, main = "random graph n = 50, p = 0.1")
components(g)
fg <- make_full_graph(5)
plot(fg)
components(fg)
est_p <- 0
N_sim <- 100
N <- 10
p <- .2
for(i in 1:N_sim){
g <- random.graph.game(N, p=p, direct=F)
if(components(g)$no==1) est_p<-est_p+1
}
est_p<-est_p/N_sim
est_p
